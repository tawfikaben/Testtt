<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ADILY FLAVOR - Recipe Collection</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <style>
        :root {
            --amazon-orange: #FF9900;
            --amazon-dark-blue: #232F3E;
            --amazon-light-blue: #37475A;
            --amazon-teal: #00A8E1;
            --amazon-yellow: #FEBD69;
            --amazon-green: #007600;
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #EAEDED;
            padding-bottom: 60px; /* Space for sticky ad */
        }
        
        .heading {
            font-family: 'Playfair Display', serif;
        }
        
        .recipe-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .recipe-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
        
        .modal {
            transition: opacity 0.3s ease;
        }
        
        .admin-panel {
            height: 80vh;
            overflow-y: auto;
        }
        
        .amazon-button {
            background-color: var(--amazon-yellow);
            border-color: #c89411 #b0820f #99710d;
            box-shadow: 0 1px 0 rgba(255,255,255,.4) inset;
            color: #111;
        }
        
        .amazon-button:hover {
            background-color: #f3a847;
        }
        
        .amazon-primary-button {
            background-color: var(--amazon-orange);
            border-color: #c45500;
            box-shadow: 0 1px 0 rgba(255,255,255,.4) inset;
            color: #111;
        }
        
        .amazon-primary-button:hover {
            background-color: #fa8900;
        }
        
        .recipe-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .hero-image {
            background-position: center;
            background-size: cover;
            background-repeat: no-repeat;
        }
        
        .category-tab {
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .category-tab.active {
            background-color: var(--amazon-orange);
            color: white;
            border-color: var(--amazon-orange);
        }
        
        .ad-container {
            background-color: #f0f0f0;
            border: 1px dashed #ccc;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            position: relative;
        }
        
        .ad-label {
            position: absolute;
            top: 5px;
            right: 5px;
            background-color: rgba(0,0,0,0.5);
            color: white;
            font-size: 10px;
            padding: 2px 5px;
            border-radius: 3px;
        }
        
        /* Mobile menu styles */
        .mobile-menu {
            transform: translateX(-100%);
            transition: transform 0.3s ease;
        }
        
        .mobile-menu.open {
            transform: translateX(0);
        }
        
        /* Category tabs scrolling */
        .tabs-container {
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
            scrollbar-width: none; /* Firefox */
        }
        
        .tabs-container::-webkit-scrollbar {
            display: none; /* Chrome, Safari, Edge */
        }
        
        /* Sticky ad on mobile */
        .sticky-mobile-ad {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            z-index: 40;
            background: white;
            padding: 5px;
            box-shadow: 0 -2px 5px rgba(0,0,0,0.1);
        }
        
        /* Mobile optimizations */
        @media (max-width: 767px) {
            .hero-section {
                height: 200px;
            }
            
            .recipe-card {
                margin-bottom: 15px;
            }
            
            .footer-grid {
                grid-template-columns: 1fr;
                gap: 20px;
            }
            
            .admin-panel {
                height: 70vh;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header class="bg-[#232F3E] text-white shadow-lg">
        <div class="container mx-auto px-4 py-3 flex justify-between items-center">
            <div class="flex items-center">
                <button id="mobileMenuBtn" class="mr-2">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                    </svg>
                </button>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7 mr-2 text-[#FF9900]" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                </svg>
                <h1 class="text-xl font-bold heading">ADILY FLAVOR</h1>
            </div>
            <button id="adminBtnMobile" class="hover:text-[#FEBD69]">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                </svg>
            </button>
        </div>
    </header>

    <!-- Mobile Menu -->
    <div id="mobileMenu" class="fixed inset-y-0 left-0 w-64 bg-[#232F3E] text-white z-50 shadow-lg mobile-menu">
        <div class="p-5">
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-xl font-bold heading">Menu</h2>
                <button id="closeMobileMenu">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            <ul class="space-y-4">
                <li><a href="#" class="block hover:text-[#FEBD69] font-medium py-2">Home</a></li>
                <li><a href="#categories" class="block hover:text-[#FEBD69] font-medium py-2">Categories</a></li>
                <li><a href="#" class="block hover:text-[#FEBD69] font-medium py-2">About</a></li>
                <li><a href="#" class="block hover:text-[#FEBD69] font-medium py-2">Contact</a></li>
            </ul>
        </div>
    </div>

    <div id="mobileMenuOverlay" class="fixed inset-0 bg-black bg-opacity-50 z-40 hidden"></div>

    <!-- Hero Section -->
    <section class="bg-cover bg-center hero-section hero-image" id="heroSection">
        <div class="container mx-auto px-4 h-full flex items-center">
            <div class="max-w-2xl text-white">
                <h2 class="text-2xl font-bold mb-2 heading">Discover Delicious Recipes</h2>
                <p class="text-sm mb-4">Explore our collection of mouthwatering recipes from around the world.</p>
                <a href="#categories" class="amazon-primary-button hover:bg-[#fa8900] text-black font-bold py-2 px-4 rounded-lg transition duration-300 inline-flex items-center text-sm">
                    Browse Categories
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-2" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                    </svg>
                </a>
            </div>
        </div>
    </section>

    <!-- Top Banner Ad -->
    <div class="container mx-auto px-4 py-3">
        <div class="ad-container h-16 rounded-lg">
            <span class="ad-label">AD</span>
            <div class="text-center">
                <p class="text-gray-500 font-medium text-sm">Top Banner Advertisement</p>
            </div>
        </div>
    </div>

    <!-- Categories Section -->
    <section id="categories" class="py-6 bg-white">
        <div class="container mx-auto px-4">
            <h2 class="text-2xl font-bold mb-4 text-center heading text-[#232F3E]">Recipe Categories</h2>

            <!-- Category Tabs - Scrollable on mobile -->
            <div class="tabs-container mb-4">
                <div class="flex flex-nowrap gap-2 pb-2" id="categoryTabs">
                    <button class="category-tab active px-3 py-1 rounded-lg border-2 border-[#232F3E] font-medium whitespace-nowrap text-sm" data-category="all">
                        All Recipes
                    </button>
                    <button class="category-tab px-3 py-1 rounded-lg border-2 border-[#232F3E] font-medium whitespace-nowrap text-sm" data-category="breakfast">
                        Breakfast
                    </button>
                    <button class="category-tab px-3 py-1 rounded-lg border-2 border-[#232F3E] font-medium whitespace-nowrap text-sm" data-category="lunch">
                        Lunch
                    </button>
                    <button class="category-tab px-3 py-1 rounded-lg border-2 border-[#232F3E] font-medium whitespace-nowrap text-sm" data-category="dinner">
                        Dinner
                    </button>
                    <button class="category-tab px-3 py-1 rounded-lg border-2 border-[#232F3E] font-medium whitespace-nowrap text-sm" data-category="dessert">
                        Dessert
                    </button>
                    <button class="category-tab px-3 py-1 rounded-lg border-2 border-[#232F3E] font-medium whitespace-nowrap text-sm" data-category="appetizer">
                        Appetizer
                    </button>
                    <button class="category-tab px-3 py-1 rounded-lg border-2 border-[#232F3E] font-medium whitespace-nowrap text-sm" data-category="vegetarian">
                        Vegetarian
                    </button>
                </div>
            </div>

            <!-- Recipe Container -->
            <div class="grid grid-cols-1 gap-4" id="recipeContainer">
                <!-- Recipe cards will be dynamically inserted here -->
            </div>

            <!-- In-content Ad -->
            <div class="ad-container h-20 my-5 rounded-lg">
                <span class="ad-label">AD</span>
                <div class="text-center">
                    <p class="text-gray-500 font-medium text-sm">In-content Advertisement</p>
                </div>
            </div>

            <!-- Mobile Ad -->
            <div class="ad-container h-60 rounded-lg my-5">
                <span class="ad-label">AD</span>
                <div class="text-center">
                    <p class="text-gray-500 font-medium">Mobile Advertisement</p>
                    <p class="text-sm text-gray-400">300x250</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Bottom Banner Ad -->
    <div class="container mx-auto px-4 py-3 mb-6">
        <div class="ad-container h-20 rounded-lg">
            <span class="ad-label">AD</span>
            <div class="text-center">
                <p class="text-gray-500 font-medium text-sm">Bottom Banner Advertisement</p>
            </div>
        </div>
    </div>

    <!-- Sticky Mobile Ad -->
    <div class="sticky-mobile-ad">
        <div class="container mx-auto px-4 py-2">
            <div class="ad-container h-14 rounded-lg">
                <span class="ad-label">AD</span>
                <div class="text-center">
                    <p class="text-gray-500 font-medium text-sm">Sticky Mobile Ad</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <footer class="bg-[#232F3E] text-white py-6">
        <div class="container mx-auto px-4">
            <div class="grid grid-cols-1 gap-6 footer-grid">
                <div>
                    <h3 class="text-lg font-bold mb-3 heading">ADILY FLAVOR</h3>
                    <p class="mb-3 text-sm">Sharing the joy of cooking with food enthusiasts around the world.</p>
                    <div class="flex space-x-4">
                        <a href="#" class="hover:text-[#FEBD69]">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M22.675 0h-21.35c-.732 0-1.325.593-1.325 1.325v21.351c0 .731.593 1.324 1.325 1.324h11.495v-9.294h-3.128v-3.622h3.128v-2.671c0-3.1 1.893-4.788 4.659-4.788 1.325 0 2.463.099 2.795.143v3.24l-1.918.001c-1.504 0-1.795.715-1.795 1.763v2.313h3.587l-.467 3.622h-3.12v9.293h6.116c.73 0 1.323-.593 1.323-1.325v-21.35c0-.732-.593-1.325-1.325-1.325z"/>
                            </svg>
                        </a>
                        <a href="#" class="hover:text-[#FEBD69]">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
                            </svg>
                        </a>
                        <a href="#" class="hover:text-[#FEBD69]">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723 10.054 10.054 0 01-3.127 1.195 4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                            </svg>
                        </a>
                    </div>
                </div>

                <div>
                    <h3 class="text-lg font-bold mb-3 heading">Quick Links</h3>
                    <ul class="space-y-2 text-sm">
                        <li><a href="#" class="hover:text-[#FEBD69]">Home</a></li>
                        <li><a href="#categories" class="hover:text-[#FEBD69]">Categories</a></li>
                        <li><a href="#" class="hover:text-[#FEBD69]">About Us</a></li>
                        <li><a href="#" class="hover:text-[#FEBD69]">Contact</a></li>
                        <li><a href="#" class="hover:text-[#FEBD69]">Privacy Policy</a></li>
                    </ul>
                </div>

                <div>
                    <h3 class="text-lg font-bold mb-3 heading">Newsletter</h3>
                    <p class="mb-3 text-sm">Subscribe to get the latest recipes and updates.</p>
                    <form class="flex">
                        <input type="email" placeholder="Your email" class="px-3 py-2 w-full rounded-l-lg focus:outline-none text-gray-800 text-sm">
                        <button type="submit" class="amazon-button px-3 py-2 rounded-r-lg transition duration-300 text-black text-sm whitespace-nowrap">
                            Subscribe
                        </button>
                    </form>
                </div>
            </div>

            <div class="border-t border-[#37475A] mt-5 pt-4 text-center text-sm">
                <p>&copy; 2023 ADILY FLAVOR. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <!-- Admin Login Modal -->
    <div id="adminModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden modal opacity-0">
        <div class="bg-white rounded-lg p-5 max-w-md w-full mx-4">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-bold heading text-[#232F3E]">Admin Access</h3>
                <button id="closeAdminModal" class="text-gray-500 hover:text-gray-700">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            <p class="mb-4 text-gray-600 text-sm">Enter the PIN code to access the admin panel.</p>
            <div class="mb-4">
                <label for="pinCode" class="block text-gray-700 mb-2 text-sm">PIN Code:</label>
                <input type="password" id="pinCode" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF9900]">
            </div>
            <div class="flex justify-end">
                <button id="submitPin" class="amazon-primary-button font-bold py-2 px-4 rounded-lg transition duration-300 text-black text-sm">
                    Submit
                </button>
            </div>
            <p id="pinError" class="mt-3 text-red-500 hidden text-sm">Incorrect PIN. Please try again.</p>
        </div>
    </div>

    <!-- Admin Panel Modal -->
    <div id="adminPanelModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden modal opacity-0">
        <div class="bg-white rounded-lg p-4 max-w-4xl w-full mx-4 max-h-[90vh]">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-bold heading text-[#232F3E]">Recipe Management</h3>
                <button id="closeAdminPanelModal" class="text-gray-500 hover:text-gray-700">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            <div class="admin-panel">
                <div class="mb-6">
                    <h4 class="text-lg font-semibold mb-3">Add/Edit Recipe</h4>
                    <form id="recipeForm" class="space-y-3">
                        <input type="hidden" id="recipeId">
                        <div>
                            <label for="recipeName" class="block text-gray-700 mb-1 text-sm">Recipe Name:</label>
                            <input type="text" id="recipeName" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF9900] text-sm">
                        </div>
                        <div>
                            <label for="recipeDescription" class="block text-gray-700 mb-1 text-sm">Description:</label>
                            <textarea id="recipeDescription" rows="2" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF9900] text-sm"></textarea>
                        </div>
                        <div class="grid grid-cols-2 gap-3">
                            <div>
                                <label for="prepTime" class="block text-gray-700 mb-1 text-sm">Prep Time (mins):</label>
                                <input type="number" id="prepTime" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF9900] text-sm">
                            </div>
                            <div>
                                <label for="cookTime" class="block text-gray-700 mb-1 text-sm">Cook Time (mins):</label>
                                <input type="number" id="cookTime" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF9900] text-sm">
                            </div>
                        </div>
                        <div>
                            <label for="recipeCategory" class="block text-gray-700 mb-1 text-sm">Category:</label>
                            <select id="recipeCategory" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF9900] text-sm">
                                <option value="breakfast">Breakfast</option>
                                <option value="lunch">Lunch</option>
                                <option value="dinner">Dinner</option>
                                <option value="dessert">Dessert</option>
                                <option value="appetizer">Appetizer</option>
                                <option value="vegetarian">Vegetarian</option>
                                <option value="vegan">Vegan</option>
                                <option value="seafood">Seafood</option>
                            </select>
                        </div>
                        <div>
                            <label for="recipeIngredients" class="block text-gray-700 mb-1 text-sm">Ingredients (one per line):</label>
                            <textarea id="recipeIngredients" rows="4" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF9900] text-sm"></textarea>
                        </div>
                        <div>
                            <label for="recipeInstructions" class="block text-gray-700 mb-1 text-sm">Instructions:</label>
                            <textarea id="recipeInstructions" rows="4" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF9900] text-sm"></textarea>
                        </div>
                        <div>
                            <label for="recipeImage" class="block text-gray-700 mb-1 text-sm">Image URL:</label>
                            <textarea id="recipeImage" rows="2" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF9900] text-sm"></textarea>
                        </div>
                        <div class="flex justify-end space-x-3">
                            <button type="button" id="clearForm" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg transition duration-300 text-sm">
                                Clear
                            </button>
                            <button type="submit" class="amazon-primary-button font-bold py-2 px-4 rounded-lg transition duration-300 text-black text-sm">
                                Save Recipe
                            </button>
                        </div>
                    </form>
                </div>

                <div>
                    <h4 class="text-lg font-semibold mb-3">Manage Recipes</h4>
                    <div class="overflow-x-auto">
                        <table class="min-w-full bg-white border border-gray-200 text-sm">
                            <thead class="bg-[#F3F3F3]">
                                <tr>
                                    <th class="py-2 px-2 border-b text-left">Name</th>
                                    <th class="py-2 px-2 border-b text-left">Category</th>
                                    <th class="py-2 px-2 border-b text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody id="recipeTableBody">
                                <!-- Recipe rows will be dynamically inserted here -->
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Ad Management Section -->
                <div class="mt-6">
                    <h4 class="text-lg font-semibold mb-3">Ad Management</h4>
                    <p class="text-gray-600 mb-3 text-sm">Use this section to manage your advertisement content.</p>
                    <div class="space-y-3">
                        <div>
                            <label class="block text-gray-700 mb-1 text-sm">Top Banner Ad:</label>
                            <textarea id="topBannerAd" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF9900] text-sm" placeholder="Paste your ad code here..."></textarea>
                        </div>
                        <div>
                            <label class="block text-gray-700 mb-1 text-sm">In-content Ad:</label>
                            <textarea id="inContentAd" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF9900] text-sm" placeholder="Paste your ad code here..."></textarea>
                        </div>
                        <div>
                            <label class="block text-gray-700 mb-1 text-sm">Mobile Ad:</label>
                            <textarea id="mobileAd" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF9900] text-sm" placeholder="Paste your ad code here..."></textarea>
                        </div>
                        <div>
                            <label class="block text-gray-700 mb-1 text-sm">Bottom Banner Ad:</label>
                            <textarea id="bottomBannerAd" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF9900] text-sm" placeholder="Paste your ad code here..."></textarea>
                        </div>
                        <div>
                            <label class="block text-gray-700 mb-1 text-sm">Mobile Sticky Ad:</label>
                            <textarea id="mobileStickyAd" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF9900] text-sm" placeholder="Paste your ad code here..."></textarea>
                        </div>
                        <div class="flex justify-end">
                            <button id="saveAds" class="amazon-primary-button font-bold py-2 px-4 rounded-lg transition duration-300 text-black text-sm">
                                Save Ad Settings
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recipe Detail Modal -->
    <div id="recipeDetailModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden modal opacity-0">
        <div class="bg-white rounded-lg p-4 max-w-4xl w-full mx-4 max-h-[90vh] overflow-y-auto">
            <div class="flex justify-between items-center mb-3">
                <h3 id="modalRecipeTitle" class="text-xl font-bold heading text-[#232F3E]">Recipe Details</h3>
                <button id="closeRecipeDetailModal" class="text-gray-500 hover:text-gray-700">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            <div id="modalRecipeImage" class="h-48 bg-[#F3F3F3] rounded-lg overflow-hidden mb-3">
                <!-- Recipe image will be inserted here -->
            </div>
            <div>
                <div class="mb-2">
                    <span id="modalRecipeCategory" class="inline-block bg-[#FEBD69] text-[#232F3E] px-3 py-1 rounded-full text-xs font-medium">Category</span>
                </div>
                <p id="modalRecipeDescription" class="text-gray-600 mb-3 text-sm"></p>
                <div class="flex space-x-4 mb-3">
                    <div class="flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-[#FF9900] mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        <span id="modalPrepTime" class="text-sm"></span>
                    </div>
                    <div class="flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-[#FF9900] mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 18.657A8 8 0 016.343 7.343S7 9 9 10c0-2 .5-5 2.986-7C14 5 16.09 5.777 17.656 7.343A7.975 7.975 0 0120 13a7.975 7.975 0 01-2.343 5.657z" />
                        </svg>
                        <span id="modalCookTime" class="text-sm"></span>
                    </div>
                </div>
                <h4 class="text-base font-semibold mb-2">Ingredients:</h4>
                <ul id="modalIngredients" class="list-disc pl-5 mb-3 space-y-1 text-sm">
                    <!-- Ingredients will be inserted here -->
                </ul>
            </div>

            <!-- In-modal Ad -->
            <div class="ad-container h-16 my-3 rounded-lg">
                <span class="ad-label">AD</span>
                <div class="text-center">
                    <p class="text-gray-500 font-medium text-sm">In-modal Advertisement</p>
                </div>
            </div>

            <div class="mt-3">
                <h4 class="text-base font-semibold mb-2">Instructions:</h4>
                <ol id="modalInstructions" class="list-decimal pl-5 space-y-2 text-sm">
                    <!-- Instructions will be inserted here -->
                </ol>
            </div>
        </div>
    </div>

    <script>
        // Sample recipe data
        let recipes = [
            {
                id: 1,
                name: "Classic Margherita Pizza",
                description: "A simple yet delicious traditional Italian pizza with fresh ingredients.",
                prepTime: 20,
                cookTime: 15,
                category: "dinner",
                ingredients: [
                    "1 pizza dough ball",
                    "3 tbsp tomato sauce",
                    "125g fresh mozzarella cheese",
                    "Fresh basil leaves",
                    "2 tbsp olive oil",
                    "Salt and pepper to taste"
                ],
                instructions: [
                    "Preheat your oven to 475°F (245°C) with a pizza stone or steel if you have one.",
                    "Roll out the pizza dough on a floured surface to your desired thickness.",
                    "Spread tomato sauce evenly over the dough, leaving a small border for the crust.",
                    "Tear the mozzarella into pieces and distribute evenly over the sauce.",
                    "Bake for 12-15 minutes until the crust is golden and the cheese is bubbly.",
                    "Remove from oven, top with fresh basil leaves, drizzle with olive oil, and season with salt and pepper.",
                    "Slice and serve immediately."
                ],
                image: "https://images.unsplash.com/photo-1513104890138-7c749659a591?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80"
            },
            {
                id: 2,
                name: "Spaghetti Bolognese",
                description: "Classic Italian pasta dish with a rich meaty sauce.",
                prepTime: 15,
                cookTime: 45,
                category: "dinner",
                ingredients: [
                    "400g spaghetti",
                    "500g ground beef",
                    "1 onion, finely chopped",
                    "2 garlic cloves, minced",
                    "2 carrots, diced",
                    "2 celery stalks, diced",
                    "400g canned tomatoes",
                    "2 tbsp tomato paste",
                    "1 cup beef stock",
                    "1 tsp dried oregano",
                    "Salt and pepper to taste",
                    "Parmesan cheese for serving"
                ],
                instructions: [
                    "Heat oil in a large pan and cook onion, garlic, carrots, and celery until softened.",
                    "Add ground beef and cook until browned.",
                    "Stir in tomatoes, tomato paste, beef stock, and oregano.",
                    "Simmer for 30 minutes until sauce thickens.",
                    "Cook spaghetti according to package instructions.",
                    "Drain pasta and serve topped with Bolognese sauce and grated Parmesan."
                ],
                image: "https://images.unsplash.com/photo-1598866594230-a7c12756260f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80"
            },
            {
                id: 3,
                name: "Chocolate Chip Cookies",
                description: "Soft and chewy cookies with melty chocolate chips, perfect for any occasion.",
                prepTime: 15,
                cookTime: 10,
                category: "dessert",
                ingredients: [
                    "1 cup butter, softened",
                    "1 cup white sugar",
                    "1 cup packed brown sugar",
                    "2 eggs",
                    "2 tsp vanilla extract",
                    "3 cups all-purpose flour",
                    "1 tsp baking soda",
                    "2 tsp hot water",
                    "1/2 tsp salt",
                    "2 cups chocolate chips"
                ],
                instructions: [
                    "Preheat oven to 350°F (175°C).",
                    "Cream together butter and sugars until smooth.",
                    "Beat in eggs one at a time, then stir in vanilla.",
                    "Dissolve baking soda in hot water and add to batter along with salt.",
                    "Stir in flour and chocolate chips.",
                    "Drop by large spoonfuls onto ungreased pans.",
                    "Bake for about 10 minutes or until edges are nicely browned."
                ],
                image: "https://images.unsplash.com/photo-1499636136210-6f4ee915583e?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80"
            },
            {
                id: 4,
                name: "Avocado Toast",
                description: "Simple and nutritious breakfast with creamy avocado on toasted bread.",
                prepTime: 5,
                cookTime: 5,
                category: "breakfast",
                ingredients: [
                    "2 slices of whole grain bread",
                    "1 ripe avocado",
                    "1/2 lemon, juiced",
                    "Salt and pepper to taste",
                    "Red pepper flakes (optional)",
                    "2 eggs (optional)"
                ],
                instructions: [
                    "Toast the bread until golden and crisp.",
                    "Cut the avocado in half, remove the pit, and scoop the flesh into a bowl.",
                    "Add lemon juice, salt, and pepper to the avocado and mash with a fork.",
                    "Spread the mashed avocado on the toast.",
                    "If desired, top with a poached or fried egg.",
                    "Sprinkle with red pepper flakes if you like a bit of heat."
                ],
                image: "https://images.unsplash.com/photo-1603046891744-76e6481cf539?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80"
            },
            {
                id: 5,
                name: "Vegetable Stir Fry",
                description: "Quick and healthy vegetable stir fry with a flavorful sauce.",
                prepTime: 15,
                cookTime: 10,
                category: "vegetarian",
                ingredients: [
                    "2 tbsp vegetable oil",
                    "2 cloves garlic, minced",
                    "1 tbsp ginger, minced",
                    "1 bell pepper, sliced",
                    "1 carrot, julienned",
                    "1 cup broccoli florets",
                    "1 cup snap peas",
                    "1 cup mushrooms, sliced",
                    "3 tbsp soy sauce",
                    "1 tbsp sesame oil",
                    "1 tbsp honey or maple syrup",
                    "Sesame seeds for garnish",
                    "Cooked rice for serving"
                ],
                instructions: [
                    "Heat vegetable oil in a wok or large frying pan over high heat.",
                    "Add garlic and ginger, stir for 30 seconds until fragrant.",
                    "Add vegetables and stir fry for 5-7 minutes until crisp-tender.",
                    "In a small bowl, mix soy sauce, sesame oil, and honey.",
                    "Pour sauce over vegetables and toss to coat.",
                    "Garnish with sesame seeds and serve over rice."
                ],
                image: "https://images.unsplash.com/photo-1512621776951-a57141f2eefd?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80"
            },
            {
                id: 6,
                name: "Spinach and Feta Stuffed Mushrooms",
                description: "Delicious vegetarian appetizer with spinach and feta cheese.",
                prepTime: 15,
                cookTime: 20,
                category: "appetizer",
                ingredients: [
                    "12 large mushrooms, stems removed",
                    "2 tbsp olive oil",
                    "1 small onion, finely chopped",
                    "2 cloves garlic, minced",
                    "4 cups fresh spinach, chopped",
                    "1/2 cup feta cheese, crumbled",
                    "2 tbsp breadcrumbs",
                    "1 tbsp fresh parsley, chopped",
                    "Salt and pepper to taste"
                ],
                instructions: [
                    "Preheat oven to 375°F (190°C).",
                    "Brush mushrooms with olive oil and place on a baking sheet.",
                    "In a pan, sauté onion and garlic until soft.",
                    "Add spinach and cook until wilted.",
                    "Remove from heat and mix in feta, breadcrumbs, parsley, salt, and pepper.",
                    "Fill each mushroom cap with the spinach mixture.",
                    "Bake for 15-20 minutes until mushrooms are tender and filling is golden."
                ],
                image: "https://images.unsplash.com/photo-1611591437281-460bfbe1220a?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80"
            }
        ];

        // Ad settings object
        let adSettings = {
            topBanner: "",
            inContent: "",
            mobileAd: "",
            bottomBanner: "",
            inModal: "",
            mobileSticky: ""
        };

        // DOM Elements
        const recipeContainer = document.getElementById('recipeContainer');
        const adminBtnMobile = document.getElementById('adminBtnMobile');
        const adminModal = document.getElementById('adminModal');
        const closeAdminModal = document.getElementById('closeAdminModal');
        const pinCode = document.getElementById('pinCode');
        const submitPin = document.getElementById('submitPin');
        const pinError = document.getElementById('pinError');
        const adminPanelModal = document.getElementById('adminPanelModal');
        const closeAdminPanelModal = document.getElementById('closeAdminPanelModal');
        const recipeForm = document.getElementById('recipeForm');
        const recipeId = document.getElementById('recipeId');
        const recipeName = document.getElementById('recipeName');
        const recipeDescription = document.getElementById('recipeDescription');
        const prepTime = document.getElementById('prepTime');
        const cookTime = document.getElementById('cookTime');
        const recipeCategory = document.getElementById('recipeCategory');
        const recipeIngredients = document.getElementById('recipeIngredients');
        const recipeInstructions = document.getElementById('recipeInstructions');
        const recipeImage = document.getElementById('recipeImage');
        const clearForm = document.getElementById('clearForm');
        const recipeTableBody = document.getElementById('recipeTableBody');
        const recipeDetailModal = document.getElementById('recipeDetailModal');
        const closeRecipeDetailModal = document.getElementById('closeRecipeDetailModal');
        const modalRecipeTitle = document.getElementById('modalRecipeTitle');
        const modalRecipeImage = document.getElementById('modalRecipeImage');
        const modalRecipeDescription = document.getElementById('modalRecipeDescription');
        const modalRecipeCategory = document.getElementById('modalRecipeCategory');
        const modalPrepTime = document.getElementById('modalPrepTime');
        const modalCookTime = document.getElementById('modalCookTime');
        const modalIngredients = document.getElementById('modalIngredients');
        const modalInstructions = document.getElementById('modalInstructions');
        const heroSection = document.getElementById('heroSection');
        const categoryTabs = document.querySelectorAll('.category-tab');

        // Mobile menu elements
        const mobileMenuBtn = document.getElementById('mobileMenuBtn');
        const closeMobileMenu = document.getElementById('closeMobileMenu');
        const mobileMenu = document.getElementById('mobileMenu');
        const mobileMenuOverlay = document.getElementById('mobileMenuOverlay');

        // Ad form elements
        const topBannerAd = document.getElementById('topBannerAd');
        const inContentAd = document.getElementById('inContentAd');
        const mobileAd = document.getElementById('mobileAd');
        const bottomBannerAd = document.getElementById('bottomBannerAd');
        const mobileStickyAd = document.getElementById('mobileStickyAd');
        const saveAds = document.getElementById('saveAds');

        // Set hero image
        const heroImageUrl = "https://images.unsplash.com/photo-1543353071-10c8ba85a904?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80";
        heroSection.style.backgroundImage = `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('${heroImageUrl}')`;

        // Initialize the page
        function init() {
            displayRecipes('all');
            updateRecipeTable();
            setupCategoryTabs();
            loadAdSettings();
            setupMobileMenu();
        }

        // Setup mobile menu
        function setupMobileMenu() {
            mobileMenuBtn.addEventListener('click', function() {
                mobileMenu.classList.add('open');
                mobileMenuOverlay.classList.remove('hidden');
            });

            closeMobileMenu.addEventListener('click', function() {
                mobileMenu.classList.remove('open');
                mobileMenuOverlay.classList.add('hidden');
            });

            mobileMenuOverlay.addEventListener('click', function() {
                mobileMenu.classList.remove('open');
                mobileMenuOverlay.classList.add('hidden');
            });

            // Close mobile menu when clicking on a link
            document.querySelectorAll('#mobileMenu a').forEach(link => {
                link.addEventListener('click', function() {
                    mobileMenu.classList.remove('open');
                    mobileMenuOverlay.classList.add('hidden');
                });
            });
        }

        // Setup category tabs
        function setupCategoryTabs() {
            categoryTabs.forEach(tab => {
                tab.addEventListener('click', function() {
                    const category = this.getAttribute('data-category');
                    
                    // Update active tab
                    categoryTabs.forEach(t => t.classList.remove('active'));
                    this.classList.add('active');
                    
                    // Display recipes for the selected category
                    displayRecipes(category);
                });
            });
        }

        // Display recipes based on category
        function displayRecipes(category) {
            recipeContainer.innerHTML = '';
            
            let filteredRecipes;
            if (category === 'all') {
                filteredRecipes = recipes;
            } else {
                filteredRecipes = recipes.filter(recipe => recipe.category === category);
            }
            
            if (filteredRecipes.length === 0) {
                const noRecipes = document.createElement('div');
                noRecipes.className = 'col-span-full text-center py-6 bg-gray-100 rounded-lg';
                noRecipes.innerHTML = `
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-400 mb-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    <h3 class="text-lg font-semibold text-gray-700 mb-2">No recipes found</h3>
                    <p class="text-gray-500 text-sm">There are no recipes in this category yet.</p>
                `;
                recipeContainer.appendChild(noRecipes);
                return;
            }
            
            filteredRecipes.forEach(recipe => {
                const recipeCard = createRecipeCard(recipe);
                recipeContainer.appendChild(recipeCard);
            });
            
            // Add event listeners to view recipe buttons
            document.querySelectorAll('.view-recipe').forEach(button => {
                button.addEventListener('click', function() {
                    const id = parseInt(this.getAttribute('data-id'));
                    showRecipeDetail(id);
                });
            });
        }

        // Create a recipe card element
        function createRecipeCard(recipe) {
            const recipeCard = document.createElement('div');
            recipeCard.className = 'bg-white rounded-lg overflow-hidden shadow-lg recipe-card mb-4';
            
            // Format category name for display
            let categoryDisplay = recipe.category.replace('-', ' ');
            categoryDisplay = categoryDisplay.charAt(0).toUpperCase() + categoryDisplay.slice(1);
            
            recipeCard.innerHTML = `
                <div class="h-40 bg-[#F3F3F3] flex items-center justify-center overflow-hidden">
                    <img src="${recipe.image}" alt="${recipe.name}" class="recipe-image">
                </div>
                <div class="p-4">
                    <div class="mb-2">
                        <span class="inline-block bg-[#FEBD69] text-[#232F3E] px-2 py-1 rounded-full text-xs font-medium">${categoryDisplay}</span>
                    </div>
                    <h3 class="text-lg font-bold mb-2 heading text-[#232F3E]">${recipe.name}</h3>
                    <p class="text-gray-600 mb-4 line-clamp-2 text-sm">${recipe.description}</p>
                    <div class="flex justify-between items-center">
                        <div class="flex space-x-2">
                            <div class="flex items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-[#FF9900] mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                                <span class="text-xs">${recipe.prepTime} min</span>
                            </div>
                            <div class="flex items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-[#FF9900] mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 18.657A8 8 0 016.343 7.343S7 9 9 10c0-2 .5-5 2.986-7C14 5 16.09 5.777 17.656 7.343A7.975 7.975 0 0120 13a7.975 7.975 0 01-2.343 5.657z" />
                                </svg>
                                <span class="text-xs">${recipe.cookTime} min</span>
                            </div>
                        </div>
                        <button class="view-recipe amazon-button hover:bg-[#f3a847] text-black px-2 py-1 rounded-lg text-xs transition duration-300" data-id="${recipe.id}">
                            View Recipe
                        </button>
                    </div>
                </div>
            `;
            
            return recipeCard;
        }

        // Update recipe table in admin panel
        function updateRecipeTable() {
            recipeTableBody.innerHTML = '';
            
            recipes.forEach(recipe => {
                // Format category name for display
                let categoryDisplay = recipe.category.replace('-', ' ');
                categoryDisplay = categoryDisplay.charAt(0).toUpperCase() + categoryDisplay.slice(1);
                
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td class="py-2 px-2 border-b">${recipe.name}</td>
                    <td class="py-2 px-2 border-b">${categoryDisplay}</td>
                    <td class="py-2 px-2 border-b text-center">
                        <button class="edit-recipe bg-[#00A8E1] hover:bg-[#0095c8] text-white px-2 py-1 rounded-lg text-xs transition duration-300 mr-1" data-id="${recipe.id}">
                            Edit
                        </button>
                        <button class="delete-recipe bg-[#D13212] hover:bg-[#b82b10] text-white px-2 py-1 rounded-lg text-xs transition duration-300" data-id="${recipe.id}">
                            Delete
                        </button>
                    </td>
                `;
                recipeTableBody.appendChild(row);
            });
            
            // Add event listeners to edit and delete buttons
            document.querySelectorAll('.edit-recipe').forEach(button => {
                button.addEventListener('click', function() {
                    const id = parseInt(this.getAttribute('data-id'));
                    editRecipe(id);
                });
            });
            
            document.querySelectorAll('.delete-recipe').forEach(button => {
                button.addEventListener('click', function() {
                    const id = parseInt(this.getAttribute('data-id'));
                    deleteRecipe(id);
                });
            });
        }

        // Show recipe detail modal
        function showRecipeDetail(id) {
            const recipe = recipes.find(r => r.id === id);
            if (!recipe) return;
            
            modalRecipeTitle.textContent = recipe.name;
            modalRecipeImage.innerHTML = `<img src="${recipe.image}" alt="${recipe.name}" class="recipe-image">`;
            modalRecipeDescription.textContent = recipe.description;
            
            // Format category name for display
            let categoryDisplay = recipe.category.replace('-', ' ');
            categoryDisplay = categoryDisplay.charAt(0).toUpperCase() + categoryDisplay.slice(1);
            
            modalRecipeCategory.textContent = categoryDisplay;
            modalPrepTime.textContent = `Prep: ${recipe.prepTime} min`;
            modalCookTime.textContent = `Cook: ${recipe.cookTime} min`;
            
            modalIngredients.innerHTML = '';
            recipe.ingredients.forEach(ingredient => {
                const li = document.createElement('li');
                li.textContent = ingredient;
                modalIngredients.appendChild(li);
            });
            
            modalInstructions.innerHTML = '';
            recipe.instructions.forEach(instruction => {
                const li = document.createElement('li');
                li.textContent = instruction;
                modalInstructions.appendChild(li);
            });
            
            recipeDetailModal.classList.remove('hidden');
            setTimeout(() => {
                recipeDetailModal.classList.add('opacity-100');
            }, 10);
        }

        // Edit recipe
        function editRecipe(id) {
            const recipe = recipes.find(r => r.id === id);
            if (!recipe) return;
            
            recipeId.value = recipe.id;
            recipeName.value = recipe.name;
            recipeDescription.value = recipe.description;
            prepTime.value = recipe.prepTime;
            cookTime.value = recipe.cookTime;
            recipeCategory.value = recipe.category;
            recipeIngredients.value = recipe.ingredients.join('\n');
            recipeInstructions.value = recipe.instructions.join('\n');
            recipeImage.value = recipe.image;
        }

        // Delete recipe
        function deleteRecipe(id) {
            if (confirm('Are you sure you want to delete this recipe?')) {
                recipes = recipes.filter(recipe => recipe.id !== id);
                updateRecipeTable();
                displayRecipes('all');
            }
        }

        // Load ad settings
        function loadAdSettings() {
            // In a real application, you would load these from storage or API
            topBannerAd.value = adSettings.topBanner;
            inContentAd.value = adSettings.inContent;
            mobileAd.value = adSettings.mobileAd;
            bottomBannerAd.value = adSettings.bottomBanner;
            mobileStickyAd.value = adSettings.mobileSticky;
        }

        // Event Listeners
        document.addEventListener('DOMContentLoaded', init);

        adminBtnMobile.addEventListener('click', function() {
            adminModal.classList.remove('hidden');
            setTimeout(() => {
                adminModal.classList.add('opacity-100');
            }, 10);
        });

        closeAdminModal.addEventListener('click', function() {
            adminModal.classList.remove('opacity-100');
            setTimeout(() => {
                adminModal.classList.add('hidden');
            }, 300);
            pinCode.value = '';
            pinError.classList.add('hidden');
        });

        submitPin.addEventListener('click', function() {
            // Simple PIN validation (1234 is the PIN)
            if (pinCode.value === '1234') {
                adminModal.classList.remove('opacity-100');
                setTimeout(() => {
                    adminModal.classList.add('hidden');
                    adminPanelModal.classList.remove('hidden');
                    setTimeout(() => {
                        adminPanelModal.classList.add('opacity-100');
                    }, 10);
                }, 300);
                pinCode.value = '';
                pinError.classList.add('hidden');
            } else {
                pinError.classList.remove('hidden');
            }
        });

        closeAdminPanelModal.addEventListener('click', function() {
            adminPanelModal.classList.remove('opacity-100');
            setTimeout(() => {
                adminPanelModal.classList.add('hidden');
            }, 300);
        });

        closeRecipeDetailModal.addEventListener('click', function() {
            recipeDetailModal.classList.remove('opacity-100');
            setTimeout(() => {
                recipeDetailModal.classList.add('hidden');
            }, 300);
        });

        recipeForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const id = recipeId.value ? parseInt(recipeId.value) : Date.now();
            const name = recipeName.value;
            const description = recipeDescription.value;
            const prep = parseInt(prepTime.value);
            const cook = parseInt(cookTime.value);
            const category = recipeCategory.value;
            const ingredients = recipeIngredients.value.split('\n').filter(item => item.trim() !== '');
            const instructions = recipeInstructions.value.split('\n').filter(item => item.trim() !== '');
            const img = recipeImage.value;
            
            if (!name || !description || isNaN(prep) || isNaN(cook) || !category || ingredients.length === 0 || instructions.length === 0 || !img) {
                alert('Please fill in all fields');
                return;
            }
            
            const recipe = {
                id,
                name,
                description,
                prepTime: prep,
                cookTime: cook,
                category,
                ingredients,
                instructions,
                image: img
            };
            
            const existingIndex = recipes.findIndex(r => r.id === id);
            if (existingIndex !== -1) {
                recipes[existingIndex] = recipe;
            } else {
                recipes.push(recipe);
            }
            
            updateRecipeTable();
            displayRecipes('all');
            
            // Clear form
            recipeForm.reset();
            recipeId.value = '';
            
            alert('Recipe saved successfully!');
        });

        clearForm.addEventListener('click', function() {
            recipeForm.reset();
            recipeId.value = '';
        });

        saveAds.addEventListener('click', function() {
            adSettings.topBanner = topBannerAd.value;
            adSettings.inContent = inContentAd.value;
            adSettings.mobileAd = mobileAd.value;
            adSettings.bottomBanner = bottomBannerAd.value;
            adSettings.mobileSticky = mobileStickyAd.value;
            
            // In a real application, you would save these to storage or API
            alert('Ad settings saved successfully!');
        });

        // Close modals when clicking outside
        window.addEventListener('click', function(e) {
            if (e.target === adminModal) {
                adminModal.classList.remove('opacity-100');
                setTimeout(() => {
                    adminModal.classList.add('hidden');
                }, 300);
                pinCode.value = '';
                pinError.classList.add('hidden');
            }
            
            if (e.target === adminPanelModal) {
                adminPanelModal.classList.remove('opacity-100');
                setTimeout(() => {
                    adminPanelModal.classList.add('hidden');
                }, 300);
            }
            
            if (e.target === recipeDetailModal) {
                recipeDetailModal.classList.remove('opacity-100');
                setTimeout(() => {
                    recipeDetailModal.classList.add('hidden');
                }, 300);
            }
        });
    </script>
</body>
</html>
